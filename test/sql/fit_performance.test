# name: test/sql/fit_performance.test
# description: performance tests for fit extension
# group: [sql]

require fit

# Test memory efficiency with large datasets
statement ok
SELECT COUNT(*) FROM fit_records('sample.fit');

# Test streaming performance - should not load entire file into memory at once
statement ok
SELECT timestamp, heart_rate, power, speed 
FROM fit_records('sample.fit') 
LIMIT 1000;

# Test aggregation performance on large datasets
statement ok
SELECT 
    DATE_TRUNC('minute', timestamp) as minute,
    AVG(heart_rate) as avg_hr,
    AVG(power) as avg_power,
    AVG(speed) as avg_speed,
    COUNT(*) as record_count
FROM fit_records('sample.fit')
WHERE timestamp IS NOT NULL
GROUP BY DATE_TRUNC('minute', timestamp)
ORDER BY minute;

# Test join performance between related tables
statement ok
SELECT 
    a.sport,
    s.session_id,
    COUNT(r.timestamp) as record_count,
    AVG(r.heart_rate) as avg_hr
FROM fit_activities('sample.fit') a
JOIN fit_sessions('sample.fit') s ON a.activity_id = s.activity_id
LEFT JOIN fit_records('sample.fit') r ON 1=1
GROUP BY a.sport, s.session_id;

# Test filtering performance on indexed-like operations
statement ok
SELECT COUNT(*) FROM fit_records('sample.fit')
WHERE heart_rate BETWEEN 120 AND 180
AND power > 100
AND speed > 5.0;

# Test complex analytical queries
statement ok
SELECT 
    device_index,
    COUNT(*) as records,
    MIN(timestamp) as start_time,
    MAX(timestamp) as end_time,
    AVG(heart_rate) as avg_hr,
    MAX(heart_rate) as max_hr,
    AVG(power) as avg_power,
    MAX(power) as max_power
FROM fit_records('sample.fit')
GROUP BY device_index
HAVING COUNT(*) > 0
ORDER BY records DESC;
